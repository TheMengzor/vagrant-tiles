#!/usr/bin/env ruby

require 'json'

cfg_input_path = "<%= node[:path] %>/opt/vector-datasource/tilestache.cfg"
cfg_output_path = "<%= node[:path] %>/etc/tilestache/tilestache.cfg"

json = File.read(cfg_input_path)
data = JSON.parse(json)

data["layers"].each do |key, val|
  val["allowed origin"] = "*"
  if val["provider"]["class"] == "TileStache.Goodies.VecTiles:Provider"
    val["provider"]["kwargs"]["dbinfo"]["host"] = 'localhost'
    val["provider"]["kwargs"]["dbinfo"]["port"] = 5432
    val["provider"]["kwargs"]["dbinfo"]["user"] = "<%= node[:pg][:user] %>"
    val["provider"]["kwargs"]["dbinfo"]["password"] = "<%= node[:pg][:password] %>"
    val["provider"]["kwargs"]["dbinfo"]["database"] = "<%= node[:pg][:dbname] %>"
    val["provider"]["kwargs"]["queries"] = val["provider"]["kwargs"]["queries"].collect { |x| if x != nil && x.start_with?("queries/") then "<%= node[:path] %>/opt/vector-datasource/"+x else x end }
  end
  data["layers"][key] = val
end

data['cache'] = {
  'class' => 'tileglue.make_tilestache_filesystem_cache',
  'kwargs' => {
    'basepath' => '<%= "#{node[:path]}/var/tiles" %>',
    'redis_host' => 'localhost',
  }
}

File.open(cfg_output_path, 'w') do |file|
  file.write(JSON.pretty_generate(data))
  file.write("\n")
end
